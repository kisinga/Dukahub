# Production nginx configuration
# Security, performance, and reliability optimized

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=20r/s;
limit_req_zone $binary_remote_addr zone=shop_limit:10m rate=20r/s;
limit_req_status 429;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Cache for proxied content
proxy_cache_path /var/cache/nginx/proxy levels=1:2 keys_zone=asset_cache:10m max_size=1g inactive=7d use_temp_path=off;

# DNS resolver - supports both Docker internal DNS and public DNS
# Try Docker DNS first (if available), then fall back to public DNS
resolver 127.0.0.11 8.8.8.8 8.8.4.4 valid=30s ipv6=off;
resolver_timeout 10s;

# Upstream backend definition for better error handling
upstream backend {
    server ${BACKEND_HOST}:${BACKEND_PORT} max_fails=3 fail_timeout=30s;
    keepalive 32;
}

server {
  listen 4200 default_server;
  server_name _;
  
  # Detect if we're behind a proxy (HTTPS termination)
  set $is_https off;
  if ($http_x_forwarded_proto = "https") {
    set $is_https on;
  }
  if ($scheme = "https") {
    set $is_https on;
  }
  
  # Security and limits
  server_tokens off;
  client_max_body_size 20M;
  client_body_timeout 30s;
  client_header_timeout 30s;
  send_timeout 30s;
  
  root /usr/share/nginx/html;
  index index.html;

  # Security headers
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), browsing-topics=(), run-ad-auction=(), join-ad-interest-group=(), private-state-token-redemption=(), private-state-token-issuance=(), private-aggregation=(), attribution-reporting=()" always;
  
  # HTTPS enforcement headers
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  # Compression
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_comp_level 6;
  gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
  gzip_disable "msie6";

  # Custom error pages for backend unavailability
  error_page 502 503 504 = @backend_unavailable;
  
  # Health check endpoint
  location /health {
    access_log off;
    return 200 "OK\n";
    add_header Content-Type text/plain;
  }
  
  # Backend unavailable handler - returns JSON error
  location @backend_unavailable {
    default_type application/json;
    add_header Content-Type application/json always;
    return 503 '{"error": "Service temporarily unavailable", "message": "Backend service is currently down. Please try again later."}';
  }

  # Shop API - higher rate limit for customer operations
  location /shop-api/ {
    limit_req zone=shop_limit burst=10 nodelay;
    limit_conn addr 10;
    
    # Use upstream for better error handling
    proxy_pass http://backend/shop-api/;
    proxy_http_version 1.1;
    
    # Error handling - intercept backend errors
    proxy_intercept_errors on;
    
    # Retry logic for backend connectivity
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 10s;
    
    # Essential headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    
    # Cookie handling - improved for session consistency
    proxy_set_header Cookie $http_cookie;
    proxy_pass_header Set-Cookie;
    proxy_cookie_domain localhost $host;
    proxy_cookie_path / /;
    proxy_cookie_domain localhost $host;
    proxy_cookie_path / /;
    
    # Timeouts
    proxy_connect_timeout 10s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Buffering
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
  }

  location = /shop-api {
    limit_req zone=shop_limit burst=10 nodelay;
    limit_conn addr 10;
    
    # Use upstream for better error handling
    proxy_pass http://backend/shop-api;
    proxy_http_version 1.1;
    
    # Error handling - intercept backend errors
    proxy_intercept_errors on;
    
    # Retry logic for backend connectivity
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 10s;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_set_header Cookie $http_cookie;
    proxy_pass_header Set-Cookie;
    proxy_cookie_domain localhost $host;
    proxy_cookie_path / /;
    proxy_connect_timeout 10s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
  }

  # Admin API - stricter rate limiting
  location /admin-api/ {
    limit_req zone=api_limit burst=5 nodelay;
    limit_conn addr 5;
    
    # Use variable for dynamic DNS resolution at request time
    set $backend_url "${BACKEND_HOST}:${BACKEND_PORT}";
    proxy_pass http://$backend_url/admin-api/;
    proxy_http_version 1.1;
    
    # Error handling - intercept backend errors
    proxy_intercept_errors on;
    
    # Retry logic for backend connectivity
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 10s;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_set_header Cookie $http_cookie;
    proxy_pass_header Set-Cookie;
    proxy_cookie_domain localhost $host;
    proxy_cookie_path / /;
    proxy_connect_timeout 10s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
  }

  location = /admin-api {
    limit_req zone=api_limit burst=5 nodelay;
    limit_conn addr 5;
    
    # Use variable for dynamic DNS resolution at request time
    set $backend_url "${BACKEND_HOST}:${BACKEND_PORT}";
    proxy_pass http://$backend_url/admin-api;
    proxy_http_version 1.1;
    
    # Error handling - intercept backend errors
    proxy_intercept_errors on;
    
    # Retry logic for backend connectivity
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 10s;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_set_header Cookie $http_cookie;
    proxy_pass_header Set-Cookie;
    proxy_cookie_domain localhost $host;
    proxy_cookie_path / /;
    proxy_connect_timeout 10s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
  }


  # Static frontend assets - aggressive caching
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, max-age=31536000, immutable";
    access_log off;
  }

  # Handle mixed content issues - ensure all requests use proper protocol
  location ~ ^/assets/ {
    # Use variable for dynamic DNS resolution at request time
    set $backend_url "${BACKEND_HOST}:${BACKEND_PORT}";
    proxy_pass http://$backend_url$request_uri;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    
    # Error handling - intercept backend errors
    proxy_intercept_errors on;
    
    # Retry logic for backend connectivity
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 10s;
    
    # Caching
    proxy_cache asset_cache;
    proxy_cache_valid 200 1d;
    proxy_cache_valid 404 1m;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    
    add_header X-Cache-Status $upstream_cache_status;
    add_header Cache-Control "public, max-age=86400";
    
    expires 1d;
  }

  # Angular SPA fallback
  location / {
    try_files $uri $uri/ /index.html;
    
    # HTML files - no caching
    location ~ \.html$ {
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      add_header Pragma "no-cache";
      add_header Expires "0";
    }
  }
}
