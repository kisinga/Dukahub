name: Test Suite

on:
  push:
    branches: [main, develop]
    paths:
      - "backend/src/migrations/**"
      - "backend/src/vendure-config.ts"
      - "backend/src/entrypoint.ts"
      - "backend/src/test-suite.ts"
      - "frontend/src/**"
      - ".github/workflows/test-migrations.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "backend/src/migrations/**"
      - "backend/src/vendure-config.ts"
      - "backend/src/entrypoint.ts"
      - "backend/src/test-suite.ts"
      - "frontend/src/**"
      - ".github/workflows/test-migrations.yml"

jobs:
  test-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "backend/package-lock.json"

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: Run backend test suite
        run: |
          cd backend
          npm run test:all
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_DATABASE: postgres

  test-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend test suite
        run: |
          cd frontend
          npm run test:all

  test-integration:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "backend/package-lock.json"

      - name: Install dependencies
        run: |
          cd backend
          npm ci
          cd ../frontend
          npm ci

      - name: Build both projects
        run: |
          cd backend
          npm run build
          cd ../frontend
          npm run build

      - name: Test full integration
        run: |
          cd backend
          npm run test:all
          cd ../frontend
          npm run test:all
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_DATABASE: postgres
