name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "backend/package-lock.json"

      - name: Install and test backend
        run: |
          cd backend
          npm ci
          npm run build
          npm run test:coverage
        timeout-minutes: 10

      - name: Upload backend coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./backend/coverage/

      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  test-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install and test frontend
        run: |
          cd frontend
          npm ci
          # Use custom test runner that handles browser availability gracefully
          npm run test:coverage
        timeout-minutes: 10

      - name: Upload frontend coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: ./frontend/coverage/

      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false
        continue-on-error: true

  coverage-combined:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install codecov CLI
        run: npm install -g codecov

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: ./backend/coverage

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: ./frontend/coverage
        continue-on-error: true

      - name: Check for coverage files
        run: |
          echo "Checking for coverage files..."
          if [ -f "./backend/coverage/lcov.info" ]; then
            echo "✅ Backend coverage found"
          else
            echo "❌ Backend coverage not found"
          fi
          if [ -f "./frontend/coverage/lcov.info" ]; then
            echo "✅ Frontend coverage found"
          else
            echo "❌ Frontend coverage not found"
          fi

      - name: Upload combined coverage
        run: |
          # Create a list of available coverage files
          COVERAGE_FILES=""
          if [ -f "./backend/coverage/lcov.info" ]; then
            COVERAGE_FILES="$COVERAGE_FILES ./backend/coverage/lcov.info"
          fi
          if [ -f "./frontend/coverage/lcov.info" ]; then
            COVERAGE_FILES="$COVERAGE_FILES ./frontend/coverage/lcov.info"
          fi

          if [ -n "$COVERAGE_FILES" ]; then
            echo "Uploading combined coverage with files: $COVERAGE_FILES"
            npx codecov --files $COVERAGE_FILES --flags combined --name combined-coverage
          else
            echo "No coverage files found, skipping combined coverage upload"
          fi
        continue-on-error: true
