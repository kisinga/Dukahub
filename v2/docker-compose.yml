services:
  postgres_db:
    image: postgres:16-alpine
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    env_file:
      - configs/.env.backend
    labels:
      - "io.vendure.create.name=dukahub"

  redis:
    image: redis:7-alpine
    ports:
      - "6479:6379"
    volumes:
      - redis_data:/data
    labels:
      - "io.vendure.create.name=Dukahub"

  typesense:
    image: typesense/typesense:27.0
    command: ["--data-dir", "/data", "--api-key", "SuperSecret"]
    ports:
      - "8208:8108"
    volumes:
      - typesense_data:/data
    labels:
      - "io.vendure.create.name=Dukahub"

  backend:
    build:
      context: backend
    ports:
      - "3000:3000"
    depends_on:
      - postgres_db
      - redis
      - typesense
    volumes:
      # Mount the configs directory to make .env.backend available
      - ./configs:/usr/src/app/configs:ro
    env_file:
      - configs/.env.backend
    environment:
      # Docker-specific overrides
      APP_ENV: production
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_SYNCHRONIZE: false

  frontend:
    build:
      context: frontend
    ports:
      - "4200:80"

volumes:
  postgres_db_data:
    driver: local
    labels:
      - "io.vendure.create.name=Dukahub"
  typesense_data:
    driver: local
    labels:
      - "io.vendure.create.name=Dukahub"
  redis_data:
    driver: local
    labels:
      - "io.vendure.create.name=Dukahub"
