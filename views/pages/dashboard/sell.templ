package dashboard

import (
	"github.com/kisinga/dukahub/models"
	"github.com/kisinga/dukahub/views/components"
	"github.com/kisinga/dukahub/views/layouts"
)

// Data structure remains the same
type NewSalePageData struct {
	CompanyID string        `json:"companyId"`
	ModelInfo models.Models `json:"modelInfo"`
}

// Update JS includes for Alpine
var sellConfig = models.LayoutConfig{
	Title: "New Sale",
	JS: []templ.Component{
		templ.Raw(`<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js"></script>`),
		templ.Raw(`<script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8.3/dist/teachablemachine-image.min.js"></script>`),
		templ.Raw(`<script type="module" src="/public/js/pages/newSale.js"></script>`),
	},
	CSS: append(
		BaseCSS,
		templ.Raw(`<link rel="stylesheet" href="/public/styles/components/product_confirm.css">`),
	),
}

templ Newsale(data *models.DashboardData) {
	@layouts.BaseLayout(sellConfig) {
		@layouts.DashboardLayout(data.User, data.Activecompany) {
			// Main Alpine component container
			<div x-data="newSale()">
				<div class="container-fluid mt-2">
					<div class="row g-4">
						// --- Left Column: Scanner/Search ---
						<div class="col-lg-5 col-md-6">
							<div class="product-scanner d-flex flex-column gap-4">
								// --- Top Section: Search & Scanner Toggle ---
								<div class="card border-0 shadow-sm">
									<div class="card-body p-3 p-md-4">
										<div class="d-flex justify-content-between align-items-center mb-3 flex-wrap">
											<h5 class="card-title mb-2 mb-sm-0 me-2">Add Product</h5>
											<button
												@click="$store.scanner.toggle()"
												:disabled="$store.scanner.status === 'initializing' || $store.scanner.status === 'loading_model' || $store.scanner.status === 'error' || !$store.scanner.isConfigured"
												class="btn btn-sm rounded-pill"
												:class="{
                                                    'btn-outline-primary': !$store.scanner.isScanning,
                                                    'btn-danger': $store.scanner.isScanning,
                                                    'disabled': $store.scanner.status === 'initializing' || $store.scanner.status === 'loading_model' || $store.scanner.status === 'error' || !$store.scanner.isConfigured
                                                }"
												:title="$store.scanner.isScanning ? 'Stop the product scanner' : 'Start the product scanner'"
											>
												<i class="bi bi-upc-scan me-1"></i>
												<span x-text="$store.scanner.buttonText">Scanner Loading...</span>
											</button>
										</div>
										// Search Input Group
										<div class="search-container position-relative mb-2">
											<div class="input-group">
												<span class="input-group-text border-end-0 bg-light text-muted px-2">
													<i class="bi bi-search"></i>
												</span>
												<input
													class="form-control border-start-0 search-input shadow-none"
													type="search"
													x-model="searchTerm"
													@input.debounce.350ms="searchProducts"
													@search="if (!searchTerm) searchResults = []"
													placeholder="Product name or code"
													aria-label="Search products"
													autocomplete="off"
													:disabled="!companyId"
												/>
											</div>
											// Loading Indicator
											<div x-show="isSearching" class="search-spinner" style="display: none;">
												<div class="spinner-border spinner-border-sm text-primary" role="status">
													<span class="visually-hidden">Searching...</span>
												</div>
											</div>
											// Search Results Dropdown
											<ul
												x-show="searchResults.length > 0"
												x-transition
												class="list-group search-results-dropdown position-absolute w-100 shadow-sm"
												style="z-index: 1000; max-height: 250px; overflow-y: auto; display: none;"
												@click.outside="searchResults = []"
											>
												<template x-for="product in searchResults" :key="product.id">
													<li
														class="list-group-item list-group-item-action px-3 py-2"
														style="cursor: pointer;"
														@click="handleSearchResultClick(product)"
													>
														<div>
															<span x-text="product.name"></span>
															<template x-if="product.code">
																<span class="text-muted small" x-text="' (' + product.code + ')'"></span>
															</template>
														</div>
														<div class="fw-bold small" x-text="(product.price ?? 0).toFixed(2)"></div>
													</li>
												</template>
												<template x-if="searchResults.length === 1 && searchResults[0].id === 'error'">
													<li class="list-group-item text-danger px-3 py-2" x-text="searchResults[0].name"></li>
												</template>
												<template x-if="searchResults.length === 1 && searchResults[0].id === 'not_found'">
													<li class="list-group-item text-muted fst-italic px-3 py-2" x-text="searchResults[0].name"></li>
												</template>
											</ul>
										</div>
									</div>
								</div>
								// --- Middle Section: Camera View ---
								<div x-show="$store.scanner.isScanning" x-transition class="card border-0 shadow-sm scanner-card" style="display: none;">
									<div class="card-body p-3 p-md-4">
										<div class="d-flex justify-content-between align-items-center mb-3">
											<h5 class="card-title mb-0">Scanner</h5>
										</div>
										<div class="camera-container mb-2">
											<div class="camera-wrapper position-relative overflow-hidden rounded bg-dark">
												<video x-ref="cameraView" class="w-100" autoplay playsinline muted></video>
											</div>
										</div>
										<div
											class="text-muted small"
											:class="{
                                                'text-danger': $store.scanner.status === 'error',
                                                'text-success': $store.scanner.status === 'ready' || $store.scanner.status === 'product_found'
                                            }"
											x-text="$store.scanner.message"
										>Scanner inactive.</div>
										// Optional: Display predictions for debug
										<div x-show="$store.scanner.predictions.length > 0" class="predictions-container small text-muted mt-2">
											<strong>Predictions:</strong>
											<template x-for="p in $store.scanner.predictions" :key="p.className">
												<div x-text="`${p.className}: ${(p.probability * 100).toFixed(1)}%`"></div>
											</template>
										</div>
									</div>
								</div>
							</div>
						</div>
						// --- Right Column: Sales Table ---
						<div class="col-lg-7 col-md-6">
							<div class="table-card card border-0 shadow-sm">
								<div class="card-header ...">
									// Header with item count remains same
									<h5 class="mb-0 me-3">Current Sale</h5>
									<span class="badge bg-primary rounded-pill fs-6">
										Items: <span x-text="$store.sale.itemCount">0</span>
									</span>
								</div>
								<div class="card-body p-0">
									<div class="table-responsive">
										<table class="table table-hover mb-0 align-middle">
											<thead class="table-light sticky-top">
												<tr>
													<th style="width: 35%;">Product / SKU</th> // Updated Header
													<th class="text-end" style="width: 15%;">Unit Price</th>
													<th class="text-center" style="width: 15%;">Quantity</th>
													<th class="text-end" style="width: 15%;">Total</th> // Total per line (excl. tax)
													<th class="text-center" style="width: 5%;"></th> // Actions column width adjusted
												</tr>
											</thead>
											<tbody>
												<template x-if="$store.sale.items.length === 0">
													// ... (No items row) ...
												</template>
												<template x-for="item in $store.sale.items" :key="item.product.id + '-' + (item.product.selectedSkuId || '') + '-' + item.price">
													<tr>
														<td>
															<span x-text="item.product.name || 'N/A'"></span>
															<template x-if="item.product.selectedSkuName">
																<span class="text-muted small d-block" x-text="'SKU: ' + item.product.selectedSkuName"></span>
															</template>
														</td>
														<td class="text-end" x-text="item.price.toFixed(2)"></td>
														<td class="text-center">
															<input
																type="number"
																class="form-control form-control-sm quantity-input text-center mx-auto"
																:value="item.quantity"
																@change="$store.sale.updateItemQuantity(item.product.id, $event.target.value, item.product.selectedSkuId, item.price)"
																min="1"
																step="1"
																style="max-width: 80px;"
																:aria-label="'Quantity for ' + item.product.name"
															/>
														</td>
														// --- Line Total (Excluding Tax) ---
														<td class="text-end fw-medium" x-text="(item.quantity * item.price).toFixed(2)"></td>
														<td class="text-center">
															<button
																class="btn btn-sm btn-outline-danger remove-item-btn border-0"
																@click="$store.sale.removeItem(item.product.id, item.product.selectedSkuId, item.price)"
																:title="'Remove ' + item.product.name"
															>
																<i class="bi bi-trash"></i>
															</button>
														</td>
													</tr>
												</template>
											</tbody>
										</table>
									</div>
								</div>
								// --- Totals Footer ---
								<div class="card-footer bg-light p-3 p-md-4 rounded-bottom">
									<div class="total-section mb-3">
										<div class="d-flex justify-content-between mb-1">
											<span class="fw-medium">Subtotal</span>
											<span x-text="$store.sale.subtotal.toFixed(2)">0.00</span>
										</div>
										<div class="d-flex justify-content-between mb-1">
											// --- Label changed to reflect total tax ---
											<span>Total Tax</span>
											<span x-text="$store.sale.tax.toFixed(2)">0.00</span>
										</div>
										<hr class="my-2"/>
										<div class="d-flex justify-content-between fw-bold fs-5">
											<span>Total</span>
											<span x-text="$store.sale.total.toFixed(2)">0.00</span>
										</div>
									</div>
									<div class="d-grid">
										<button
											class="btn btn-success btn-lg checkout-btn"
											@click="checkout"
											:disabled="isCheckingOut || $store.sale.items.length === 0"
										>
											<template x-if="isCheckingOut">
												<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
											</template>
											<i x-show="!isCheckingOut" class="bi bi-check-circle me-2"></i>
											<span x-text="isCheckingOut ? 'Processing...' : 'Finish Sale'">Finish Sale</span>
										</button>
									</div>
									<div x-show="checkoutStatus.message" class="mt-3 text-center" :class="checkoutStatus.type" x-text="checkoutStatus.message"></div>
								</div>
							</div>
						</div>
					</div>
				</div>
				// --- Scan Modal ---
				@components.ProductConfirmModal()
				// --- Pass Data to JS ---
				@templ.JSONScript("page-data", NewSalePageData{
					CompanyID: data.Activecompany.Id,
					ModelInfo: *data.Model,
				})
			</div> // End x-data
		}
	}
}
