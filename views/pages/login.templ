package pages

import (
	"github.com/kisinga/dukahub/models"
	"github.com/kisinga/dukahub/views/layouts"
)

// --- Data Structure for JS ---
type LoginPageData struct {
	UserType string `json:"userType"` // Pass user type as string
}

var loginConfig = models.LayoutConfig{
	Title: "Dukahub Login",
	JS: []templ.Component{
		templ.Raw(`
		<script type="module" src="/public/js/pages/login.js"></script>
		`),
	},
	CSS: []templ.Component{
		templ.Raw(`<link rel="stylesheet" href="/public/styles/login.css"/>`),
	},
}

templ Login(userType models.LoginUserType) {
	@layouts.BaseLayout(loginConfig) {
		<div class="login-background">
			<div class="container">
				<div class="row justify-content-center">
					<div class="col-12 col-md-5">
						<!-- Alpine Component Root -->
						<div
							class="card login-card"
							x-data="loginForm"
							x-init="init()"
						>
							<div class="card-body login-card-body">
								<div class="text-center mb-4">
									<div class="login-logo"></div>
									<h3 class="login-heading">Welcome Back</h3>
								</div>
								<!-- Display initialization errors -->
								<div
									x-show="initError"
									x-text="initError"
									class="alert alert-danger login-error-message"
								></div>
								<!-- Login Form with Alpine bindings -->
								<form
									method="post"
									novalidate
									@submit.prevent="handleSubmit"
									:disabled="!!initError"
								>
									<div class="mb-3">
										<label for="email" class="form-label login-label">Email address</label>
										<input
											type="email"
											id="email"
											name="email"
											placeholder="Enter email"
											class="form-control login-input rounded-pill"
											required
											x-model="email"
											x-ref="emailInput"
											:disabled="isLoading || !!initError"
										/>
										<!-- Optional: Add Alpine-based validation feedback if needed -->
									</div>
									<div class="mb-3">
										<label for="password" class="form-label login-label">Password</label>
										<input
											type="password"
											id="password"
											name="password"
											placeholder="Password"
											class="form-control login-input rounded-pill"
											required
											x-model="password"
											:disabled="isLoading || !!initError"
										/>
										<!-- Optional: Add Alpine-based validation feedback if needed -->
									</div>
									<div class="d-grid mb-3">
										<button
											type="submit"
											class="btn btn-login rounded-pill text-white"
											:disabled="isLoading || !email || !password || !!initError"
										>
											<span
												class="spinner-border spinner-border-sm"
												role="status"
												aria-hidden="true"
												:class="{ 'd-none': !isLoading }"
											></span>
											<span x-text="isLoading ? 'Logging in...' : 'Login'">Login</span>
										</button>
									</div>
									<!-- Error/Success Message Area -->
									<div
										x-show="message"
										class="alert login-error-message"
										:class="{ 'alert-danger': isError, 'alert-success': !isError }"
										x-text="message"
									></div>
									<div class="text-center">
										<a href="#" class="login-forgot-link">Forgot password?</a>
									</div>
								</form>
							</div>
						</div>
						<p class="text-center mt-3 login-footer-text">&copy; 2025 Dukahub</p>
					</div>
				</div>
			</div>
		</div>
		<!-- Page Data Script (remains the same) -->
		@templ.JSONScript("login-page-data", LoginPageData{
			UserType: userType.String(), // Convert enum/type to string
		})
	}
}
