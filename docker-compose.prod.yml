# =====================================
# Production Overrides (Explicit)
# =====================================
#
# Merge with base: docker compose -f docker-compose.yml -f docker-compose.prod.yml
#
# Resource limits optimized for: 8GB RAM / 4 vCPU server
# Conservative allocation (uses ~6GB) leaving room for:
#   - OS overhead (~1.5GB)
#   - Other homelab services (~0.5GB buffer)
#
# Differences from development:
#   - Uses pre-built images from GHCR
#   - No exposed database ports (internal only)
#   - Named volumes instead of bind mounts
#   - Conservative limits (safe for multi-service environments)
#   - Security hardening (non-root, read-only, tmpfs)
#   - Watchtower auto-update labels
#
# Usage:
#   docker compose -f docker-compose.yml -f docker-compose.prod.yml pull
#   docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  postgres_db:
    # No exposed ports in production - only internal network access
    expose:
      - "5432"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2G # Conservative for 8GB server
        reservations:
          cpus: "0.5"
          memory: 768M
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /run

  redis:
    # No exposed ports in production
    expose:
      - "6379"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 192M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  backend:
    # Uses image from base config (GHCR)
    environment:
      APP_ENV: production
      COOKIE_SECURE: ${COOKIE_SECURE:-true}
      NODE_ENV: production
      NODE_OPTIONS: "--max-old-space-size=2560" # 2.5GB heap
    # No exposed ports - only accessed via frontend nginx
    expose:
      - "3000"
    volumes:
      - ml_models:/usr/src/app/static/assets/ml-models
      - backend_assets:/usr/src/app/static/assets
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    healthcheck:
      start_period: 90s
    restart: always
    stop_grace_period: 60s
    deploy:
      resources:
        limits:
          cpus: "2.5"
          memory: 3G # Main workload, gets most resources
        reservations:
          cpus: "1.0"
          memory: 1280M
    security_opt:
      - no-new-privileges:true

  frontend:
    # Uses image from base config (GHCR)
    ports:
      - "${FRONTEND_PORT:-4200}:4200"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M # Nginx with caching
        reservations:
          cpus: "0.25"
          memory: 192M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx
      - /var/run

volumes:
  ml_models:
    driver: local
    labels:
      - "io.vendure.create.name=dukahub"
  backend_assets:
    driver: local
    labels:
      - "io.vendure.create.name=dukahub"
